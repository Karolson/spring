name: Build Engine (Docker)
on:
  workflow_dispatch:
    inputs:
      strip-symbols:
        description: Strip Debug Symbols
        required: true
        default: 'true'
      use-caches:
        description: Use Caches (Docker/ccache)
        required: true
        default: 'true'
      archtune-flags:
        description: Arch/Tune Flags
        required: false
        default: ''
      buildtype:
        type: choice
        description: Build Type
        required: false
        options:
          - RELWITHDEBINFO
          - DEBUG
          - RELEASE
          - PROFILE
        default: 'RELWITHDEBINFO'
      buildtype-flags:
        description: Build Type Compilation Flags Override
        required: false
        default: ''
      compilation-flags:
        description: Extra Compilation Flags
        required: false
        default: ''
      clean-ccache:
        description: Reset ccache before build
        required: false
        default: 'false'
      debug-tmate:
        description: Debug with tmate (either "pre" or "post" Docker run)
        required: false
        default: 'false'
      debug-ccache:
        description: Generate ccache Debug Artifacts
        required: false
        default: 'false'
jobs:
  build_engine:
    name: ${{ matrix.os }}-${{ matrix.build-configuration }}
    runs-on: 'ubuntu-22.04'
    strategy:
      fail-fast: true
      matrix:
        os: [windows-64, linux-64]
        build-configuration: [legacy, headless, dedicated]
    steps:
      - name: Print Build Info
        run: |
          echo 'Build info:'
          echo 'Git commit hash: ${{ github.sha }}'
          echo 'Repository: ${{ github.repository }}'
        shell: bash

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Build engine via docker
        uses: ./docker-build
        id: run-docker-build
        with:
          archtune-flags: '${{ github.event.inputs.archtune-flags }}'
          build-configuration: '${{ matrix.build-configuration }}'
          buildtype: '${{ github.event.inputs.buildtype }}'
          buildtype-flags: '${{ github.event.inputs.buildtype-flags }}'
          compilation-flags: '${{ github.event.inputs.compilation-flags }}'
          use-cache: '${{ github.event.inputs.use-caches }}'
          platform: '${{ matrix.os }}'
          debug-tmate: '${{ github.event.inputs.debug-tmate }}'
          debug-ccache: '${{ github.event.inputs.debug-ccache }}'

      - name: Upload Bin as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.run-docker-build.outputs.bin_name }}
          path: ${{ github.workspace }}/artifacts/${{ steps.run-docker-build.outputs.bin_name }}

      - name: Upload Dbg Artifacts
        if: github.event.inputs.strip-symbols == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.run-docker-build.outputs.dbg_name }}
          path: ${{ github.workspace }}/artifacts/${{ steps.run-docker-build.outputs.dbg_name }}

      - name: Upload Build Options Artifact
        uses: actions/upload-artifact@v3
        with:
          name: buildoptions_${{ matrix.os }}.txt
          path: ${{ github.workspace }}/artifacts/buildoptions_${{ matrix.os }}.txt

      - name: Upload ccache Debug Data
        uses: actions/upload-artifact@v3
        if: github.event.inputs.debug-ccache == 'true'
        with:
          name: ccache_debug_${{ matrix.os }}.tgz
          path: ${{ github.workspace }}/artifacts/${{ steps.run-docker-build.outputs.ccache_dbg }}
